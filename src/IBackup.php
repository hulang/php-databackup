<?php

declare(strict_types=1);

namespace php\databackup;

interface IBackup
{
    /**
     * 设置分卷大小
     * 
     * 本函数用于设定分卷的大小
     * 分卷大小是指在进行数据分割操作时每个分卷（或切片）应占用的空间大小
     * 这一设置对于那些需要将大文件
     * 或大量数据分解成更小、更易管理的部分的场景非常有用.例如,在文件上传或数据备份过程中,将大文件分解成小块可以更高效地处理数据
     * 
     * @param float|int $size 分卷的大小.可以是整数或浮点数,表示字节大小
     *                       例如,1024表示1KB,1048576表示1MB
     * @return void 本函数没有返回值
     */
    public function setvolsize($size);

    /**
     * 设置备份路径
     * 
     * 该方法用于设置备份文件的存储路径
     * 备份路径对于确保备份文件的安全存储和管理至关重要
     * 设置正确的备份路径可以确保备份文件不会被误删除或覆盖,同时方便用户查找和恢复备份
     * 
     * @param string $dir 备份文件的存储路径.该路径应为绝对路径,确保能够正确找到备份文件的位置
     * @return void 该方法没有返回值,它主要用于配置备份路径,并不返回任何结果
     */
    public function setbackdir($dir);

    /**
     * 执行数据库备份
     * 
     * 该方法用于触发数据库的备份过程
     * 备份是通过调用一系列的内部操作来完成
     * 包括但不限于构建备份文件、压缩数据、写入备份文件等
     *
     * @return void 该方法没有返回值,因为它专注于执行备份操作,而不是返回结果
     */
    public function backup();

    /**
     * 处理AJAX请求以执行数据库备份
     * 
     * 该方法专门设计用于通过AJAX请求触发数据库备份过程
     * 它不接受任何参数也不返回任何值,而是通过AJAX响应向用户反馈备份过程的状态或结果
     * 
     * @return void
     */
    public function ajaxbackup();
}
